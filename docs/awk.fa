===================================
📌 1. Finglish Version (Persian Latin Script)
===================================

📖 **Tashrih:**
    Dastoor `awk` yek zaban barname-nevisi ast ke baraye gardesh va kar ba data dar file-ha ya khorooji-haye dastoor-haye digar be kar miravad. `awk` be shoma komak mikonad ta satr-ha va sotoon-ha ra entekhab konid, anha ra moratab konid, va ya taghir dahid.

⚙️ **Gozine-ha:**
    🔹 `awk '{print $1}' file.txt` --> 🖨️ Chap kardane avalin sotoon az har satr.
    🔹 `awk -F',' '{print $2}' file.csv` --> 🧩 Estefade az `,` be onvane joda-konande (delimiter) va chap kardane dovomin sotoon.
    🔹 `awk '/pattern/ {print}' file.txt` --> 🔍 Peyda kardane satr-haee ke yek olgoo (pattern) dar anha vojood darad va chap kardane anha.
    🔹 `awk '{sum += $1} END {print "Jam:", sum}' file.txt` --> ➕ Jam zadan sotoon aval va namayesh kole jam dar akhar.
    🔹 `awk '{if ($3 > 50) print $1, $3}' file.txt` -->  শর্ত 📝 Chap kardane sotoon aval va sevom agar sotoon sevom bozorgtar az 50 bashad.

🛠 **Mesal-ha:**

    $ awk '{print $1}' data.txt

    🔹 Chap kardane avalin sotoon az har satr az file `data.txt`.

    $ awk -F':' '{print $1}' /etc/passwd

    🔹 Chap kardane username-ha az file `/etc/passwd` (ba estefade az `:` be onvane joda-konande).

✅ **Mesal sade:**

    $ echo "ali 25 tehran" | awk '{print "Name:", $1, "Age:", $2}'

    🔹 Namayesh khorooji: `Name: ali Age: 25` (Chap kardane name va sen az yek string).

===================================
📌 2. English Version
===================================

📖 **Description:**
    The `awk` command is a programming language used for scanning and processing data in files or output from other commands. `awk` helps you select, sort, and modify rows and columns.

⚙️ **Options:**
    🔹 `awk '{print $1}' file.txt` --> 🖨️ Print the first column of each line.
    🔹 `awk -F',' '{print $2}' file.csv` --> 🧩 Use `,` as a delimiter and print the second column.
    🔹 `awk '/pattern/ {print}' file.txt` --> 🔍 Find lines that contain a specific pattern and print them.
    🔹 `awk '{sum += $1} END {print "Sum:", sum}' file.txt` --> ➕ Sum the first column and display the total sum at the end.
    🔹 `awk '{if ($3 > 50) print $1, $3}' file.txt` --> 📝 Print the first and third columns if the third column is greater than 50.

🛠 **Examples:**

    $ awk '{print $1}' data.txt

    🔹 Print the first column of each line from the file `data.txt`.

    $ awk -F':' '{print $1}' /etc/passwd

    🔹 Print usernames from the `/etc/passwd` file (using `:` as a delimiter).

✅ **Simple Example:**

    $ echo "ali 25 tehran" | awk '{print "Name:", $1, "Age:", $2}'

    🔹 Output: `Name: ali Age: 25` (Print the name and age from a string).