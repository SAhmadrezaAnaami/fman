
===================================
📌 1. Finglish Version (Persian Latin Script)
===================================

📖 **Tashrih:**
    Dastoor `gcov-tool` yek abzare barname-nevisi baraye analiz va dastkari data-haye tolid shode az `gcov` ast. `gcov` barname-i ast ke coverage code ra hesab mikonad. `gcov-tool` be shoma komak mikonad ta in data-ha ra behtar moratab va modiriyat konid.

⚙️ **Gozine-ha:**
    🔹 `--help`  --> ❓ Namayesh rahnamaye dastoor va gozine-ha.
    🔹 `--version`  --> ℹ️ Namayesh version `gcov-tool`.
    🔹 `--gcov-prefix directory` --> 📁 Directory-i ke file-haye `.gcda` va `.gcno` dar aanja gharar darand.

🛠 **Mesal-ha:**

    $ gcov-tool --help

    🔹 Namayesh rahnamaye kamel dastoor.

    $ gcov-tool --version

    🔹 Namayesh version barname.

✅ **Mesal sade:**

    $ gcov-tool --gcov-prefix build_dir

    🔹 Agar file-haye `.gcda` va `.gcno` dar `build_dir` bashand, in dastoor aan directory ra baraye analiz moshakhas mikonad.

===================================
📌 2. English Version
===================================

📖 **Description:**
    The `gcov-tool` command is a programming tool used to analyze and manipulate data generated by `gcov`. `gcov` is a program that calculates code coverage. `gcov-tool` helps you to better organize and manage this data.

⚙️ **Options:**
    🔹 `--help`  --> ❓ Display help information and options.
    🔹 `--version`  --> ℹ️ Display the `gcov-tool` version.
    🔹 `--gcov-prefix directory` --> 📁 Directory where `.gcda` and `.gcno` files are located.

🛠 **Examples:**

    $ gcov-tool --help

    🔹 Display the complete command help.

    $ gcov-tool --version

    🔹 Display the program version.

✅ **Simple Example:**

    $ gcov-tool --gcov-prefix build_dir

    🔹 If `.gcda` and `.gcno` files are in `build_dir`, this command specifies that directory for analysis.
