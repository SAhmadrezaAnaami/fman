
===================================
📌 1. Finglish Version (Persian Latin Script)
===================================

📖 **Tashrih:**
    Dastoor `kmodsign` baraye emza kardan (sign) module-haye هسته (kernel modules) baraye امنیyat be kar miravad.  In kar باعث می شود که هسته فقط module-haye emza shode ra load konad.

⚙️ **Gozine-ha:**
    🔹 `-k < کلید خصوصي >` --> 🔑 کلید خصوصي براى امضا کردن module.
    🔹 `-c < گواهینامه >` --> 📃 گواهینامه مربوط به کلید خصوصي.
    🔹 `-m < module >` --> 📦 مسير module که بايد امضا شود.
    🔹 `-g`            --> 🔍 بررسى امضاى module.

🛠 **Mesal-ha:**

    $ kmodsign -k private.key -c cert.pem mymodule.ko

    🔹 Module `mymodule.ko` با استفاده از کلید خصوصي `private.key` و گواهینامه `cert.pem` امضا می شود.

    $ kmodsign -g mymodule.ko

    🔹 بررسی می کند که آیا `mymodule.ko` به درستی امضا شده است یا خیر.

✅ **Mesal sade:**

    $ kmodsign -k signing_key.priv -c signing_key.pub my_driver.ko

    🔹 این دستور `my_driver.ko` را با استفاده از کلید خصوصي `signing_key.priv` و گواهینامه `signing_key.pub` امضا می کند.  سپس هسته می تواند از این امضا برای تایید اصالت module استفاده کند قبل از اینکه آن را load کند.

===================================
📌 2. English Version
===================================

📖 **Description:**
    The `kmodsign` command is used to sign kernel modules for security purposes. This ensures that the kernel only loads modules that have been cryptographically signed.

⚙️ **Options:**
    🔹 `-k <private key>` --> 🔑 Private key to use for signing the module.
    🔹 `-c <certificate>` --> 📃 Certificate corresponding to the private key.
    🔹 `-m <module>`      --> 📦 Path to the module to be signed.
    🔹 `-g`              --> 🔍 Verify module signature.

🛠 **Examples:**

    $ kmodsign -k private.key -c cert.pem mymodule.ko

    🔹 Signs the `mymodule.ko` module using the private key `private.key` and the certificate `cert.pem`.

    $ kmodsign -g mymodule.ko

    🔹 Verifies whether `mymodule.ko` is correctly signed.

✅ **Simple Example:**

    $ kmodsign -k signing_key.priv -c signing_key.pub my_driver.ko

    🔹 This command signs `my_driver.ko` using the private key `signing_key.priv` and the certificate `signing_key.pub`.  The kernel can then use this signature to verify the module's authenticity before loading it.
